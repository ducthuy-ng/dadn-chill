version: '3.8'

services:
  postgres:
    image: postgres:15.2-alpine3.17
    ports:
      - '5432:5432'
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - ./apps/backend/data:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_USER=backend
      - POSTGRES_PASSWORD=password

  # kafka1:
  #   image: bitnami/kafka:3.4.0
  #   ports:
  #     - '9092:9092'
  #   volumes:
  #     - kafka-volume:/bitnami/kafka
  #   networks:
  #     - kafka-network
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - BITNAMI_DEBUG=yes

  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9094
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=KRAFT_LISTENER

  #     - KAFKA_CFG_LISTENERS=KRAFT_LISTENER://:9094,CONTROLLER://:9093,CONSUMER://:9092
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=CONTROLLER://kafka1:9093,CONSUMER://127.0.0.1:9092

  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=KRAFT_LISTENER:PLAINTEXT,CONTROLLER:PLAINTEXT,CONSUMER:PLAINTEXT
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CONTROLLER

  mqtt:
    image: eclipse-mosquitto:2.0.15
    ports:
      - '1883:1883'
    volumes:
      - mqtt-volume:/mosquitto/data
      - mqtt-volume:/mosquitto/log
      - ./docker/mosquitto.conf:/mosquitto/config/mosquitto.conf

volumes:
  kafka-volume:
  postgres-volume:
  mqtt-volume:

networks:
  kafka-network:
